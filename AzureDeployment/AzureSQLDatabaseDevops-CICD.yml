name: CICD-BuildAndDeployDacpac

on:
  # Triggers the workflow on push request for the master branch
  push:
    branches: [ master ]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: release

jobs:

  deployDacPac:
    needs: [ buildDacPac ]
    runs-on: windows-latest
    #env:
    #  releaseZipName: 'sqldb1.zip' 
    
    steps:
    - uses: actions/checkout@v2

    - name: Download DacPac artifact to Github actions VM
      uses: actions/download-artifact@v2
      with:
        name: SQLDB1_ARTIFACT
        path: ../artifacts/
  
    - name: Display downloaded files (artifacts)
      run: dir ../artifacts/

    - name: Log on to Azure with Github principal
      uses: azure/actions/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Publish DacPac to Azure SQL Database
      uses: Azure/sql-action@v1
      with:
        server-name: fcvsqlserverea.database.windows.net
        connection-string: ${{â€¯secrets.AZURE_SQL_CONNECTION_STRING }}
        dacpac-package: '../artifacts/sqldb-db1.dacpac'

  buildDacPac:
    #Specify Windows OS for Windows Visual Studio solution
    runs-on: windows-latest
    
    
    steps:
    - uses: actions/checkout@v2

    - name: Add MSBuild.exe to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    #Ensure package dependencies are installed
    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build the Database Project solution
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}
      
    - name: Show output path and files in that path
      run: |
        echo ${{github.workspace}}\bin\${{env.BUILD_CONFIGURATION}}\sqldb-db1.dacpac
        ls -R ${{github.workspace}}\bin\${{env.BUILD_CONFIGURATION}}\
      
    - name: Upload DACPAC as a Github artifact
      uses: actions/upload-artifact@v2
      with:
        name: SQLDB1_ARTIFACT
        path: ${{github.workspace}}\bin\${{env.BUILD_CONFIGURATION}}\sqldb-db1.dacpac
        if-no-files-found: error